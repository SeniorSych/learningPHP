<?php
/*
1. Напишите функцию, возвращающую дескриптор <img /> разметки HTML-страницы. Эта
функция должна принимать URL изображения в качестве обязательного аргумента, а так-
же текст надписи, ширину и высоту изображения в качестве необязательных аргументов alt,
height и width соответственно.
2. Видоизмените функцию из предыдущего упражнения таким образом, чтобы передавать ей толь-
ко имя файла в качестве аргумента URL. Введите глобальную переменную в теле данной функ-
ции, чтобы дополнить указанное имя файла до полного URL. Так, если данной функции пере-
дано имя файла photo.png, а глобальная переменная содержит путь /images/, то атрибут
возвращаемого дескриптора <img> будет содержать путь /images/photo.png. Такая функ-
ция упрощает поддержание правильности дескрипторов изображений даже в том случае, если
изображения размещаются по новому пути или на другом сервере. Для этого достаточно изме-
нить содержимое глобальной переменной, например, с /images/ на http://images.example
.com/.
3. Разместите функцию из предыдущего упражнения в отдельном файле. Затем создайте еще
один файл, загружающий первый файл, используя его для вывода на экран ряд дескрипторов
<img />.
4. Что выводится на экран в приведенном ниже фрагменте кода?
<?php
function restaurant_check($meal, $tax, $tip) {
$tax_amount = $meal * ($tax / 100);
$tip_amount = $meal * ($tip / 100);
return $meal + $tax_amount + $tip_amount;
}
$cash_on_hand = 31;
$meal = 25;
$tax = 10;
$tip = 10;
while(($cost = restaurant_check($meal, $tax,$tip))
< $cash_on_hand) {
$tip++;
print "I can afford a tip of $tip% ($cost)\n";
}
?>
5. Такие цвета веб-палитры, как, например, #ffffff и #сс3399, составляются из шестнадцате-
ричных значений красной, зеленой и синей составляющих цвета. Напишите функцию, прини-
мающую в качестве аргументов десятичные значения красной, зеленой и синей составляющих
цвета и возвращающую символьную строку, содержащую подходящий цвет для применения
на веб-странице. Так, если указаны аргументы 255, 0 и 255 при вызове данной функции,
она должна возвратить символьную строку #ff00ff. Для написания данной функции может
оказаться полезной встроенная функция dechex(), документацию на которую можно найти
по адресу http://www.php.net/dechex.
*/
//1.
function descr ($url, $alt='text', $width=100, $height=200)
{
    $img="<img src='$url' width='$width' alt='$alt' height='$height'>";
    return $img;
}
print descr('http://images.example.com/');
//2.
$imgLink = 'http://images.example.com/';
function ImageLink($filename)
{
    $GLOBALS['imgLink'] .= "$filename";
}
ImageLink('photo.png');
print $imgLink;
print "<img src='$imgLink' alt='какой-то текст'>";

//5
function color ($red, $green, $blue)
{
    $color=dechex($red).dechex($green).dechex($blue);
    return $color;
}
print color(255, 0, 255);

